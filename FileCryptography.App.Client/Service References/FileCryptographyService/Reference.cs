//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileCryptography.Presentation.Client.Wpf.FileCryptographyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CryptionRequest", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.EncryptionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.DecryptionRequest))]
    public partial class CryptionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.FileCryptionArgs CryptionArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.File FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.FileCryptionArgs CryptionArgs {
            get {
                return this.CryptionArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.CryptionArgsField, value) != true)) {
                    this.CryptionArgsField = value;
                    this.RaisePropertyChanged("CryptionArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.File File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCryptionArgs", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class FileCryptionArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PassPhraseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PrivateKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PublicKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PassPhrase {
            get {
                return this.PassPhraseField;
            }
            set {
                if ((object.ReferenceEquals(this.PassPhraseField, value) != true)) {
                    this.PassPhraseField = value;
                    this.RaisePropertyChanged("PassPhrase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PrivateKey {
            get {
                return this.PrivateKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateKeyField, value) != true)) {
                    this.PrivateKeyField = value;
                    this.RaisePropertyChanged("PrivateKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile PublicKey {
            get {
                return this.PublicKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicKeyField, value) != true)) {
                    this.PublicKeyField = value;
                    this.RaisePropertyChanged("PublicKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Domain.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.KeyFile))]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncryptionRequest", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class EncryptionRequest : FileCryptography.Presentation.Client.Wpf.FileCryptographyService.CryptionRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DecryptionRequest", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class DecryptionRequest : FileCryptography.Presentation.Client.Wpf.FileCryptographyService.CryptionRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyFile", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts.Requests")]
    [System.SerializableAttribute()]
    public partial class KeyFile : FileCryptography.Presentation.Client.Wpf.FileCryptographyService.File {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCryptionEvent", Namespace="http://schemas.datacontract.org/2004/07/FileCryptography.Framework.Services.Contr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class FileCryptionEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecutedCommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FileCryptography.Presentation.Client.Wpf.FileCryptographyService.File FileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutedCommand {
            get {
                return this.ExecutedCommandField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutedCommandField, value) != true)) {
                    this.ExecutedCommandField = value;
                    this.RaisePropertyChanged("ExecutedCommand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileCryptography.Presentation.Client.Wpf.FileCryptographyService.File File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileCryptographyService.IFileCryptographyService", CallbackContract=typeof(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.IFileCryptographyServiceCallback))]
    public interface IFileCryptographyService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/Decrypt")]
        void Decrypt(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.DecryptionRequest req);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/Decrypt")]
        System.Threading.Tasks.Task DecryptAsync(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.DecryptionRequest req);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/Encrypt")]
        void Encrypt(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.EncryptionRequest req);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/Encrypt")]
        System.Threading.Tasks.Task EncryptAsync(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.EncryptionRequest req);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileCryptographyServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/OnFileDecrypted")]
        void OnFileDecrypted(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.FileCryptionEvent args);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFileCryptographyService/OnFileEncrypted")]
        void OnFileEncrypted(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.FileCryptionEvent args);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileCryptographyServiceChannel : FileCryptography.Presentation.Client.Wpf.FileCryptographyService.IFileCryptographyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileCryptographyServiceClient : System.ServiceModel.DuplexClientBase<FileCryptography.Presentation.Client.Wpf.FileCryptographyService.IFileCryptographyService>, FileCryptography.Presentation.Client.Wpf.FileCryptographyService.IFileCryptographyService {
        
        public FileCryptographyServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FileCryptographyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FileCryptographyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FileCryptographyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FileCryptographyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Decrypt(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.DecryptionRequest req) {
            base.Channel.Decrypt(req);
        }
        
        public System.Threading.Tasks.Task DecryptAsync(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.DecryptionRequest req) {
            return base.Channel.DecryptAsync(req);
        }
        
        public void Encrypt(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.EncryptionRequest req) {
            base.Channel.Encrypt(req);
        }
        
        public System.Threading.Tasks.Task EncryptAsync(FileCryptography.Presentation.Client.Wpf.FileCryptographyService.EncryptionRequest req) {
            return base.Channel.EncryptAsync(req);
        }
    }
}
